package com.follett.coms.service.models;

// Generated 5 Oct, 2015 11:48:28 AM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * As400Orders generated by hbm2java
 */
// add one to one relation ship with billship
@Entity
@Table(name = "AS400_ORDERS")
public class As400Orders implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private As400OrdersId id;

	// private As400Customers as400Customers;

	private Integer orderId;

	private Long masterOrderNumber;

	// private Integer quoteNumber;

	private String customerName;

	private BigDecimal poNumber;

	private String orderStatus;

	private String orderType;

	private String orderProcessStatus;

	private String orderCategory;

	private String orderSource;

	private String pullSheetNumber;

	private Date orderDate;

	private String taxEmempt;

	private String taxEmemptNum;

	private Set<As400TrackingInformation> as400TrackingInformations = new HashSet<As400TrackingInformation>(
			0);

	// Extra mapping of BILLSHIPINFORMATION as it is not mapped in database
	// design.

	private Set<As400BillShipInformation> as400BillShipInformations;

	// Extra mapping of AS400Items as it is not mapped in database
	// design.

	private List<Orderitemsview> as400Items;

	public As400Orders() {
	}

	public As400Orders(As400OrdersId id) {
		this.id = id;
	}

	public As400Orders(As400OrdersId id, Integer orderId,
			Long masterOrderNumber, Integer quoteNumber, String customerName,
			BigDecimal poNumber, String orderStatus, String orderType,
			String orderProcessStatus, String orderCategory,
			String orderSource, String pullSheetNumber, Date orderDate,
			String taxEmempt, String taxEmemptNum,
			Set<As400TrackingInformation> as400TrackingInformations,
			Set<As400BillShipInformation> as400BillShipInformations,
			List<Orderitemsview> as400Items) {
		super();
		this.id = id;
		this.orderId = orderId;
		this.masterOrderNumber = masterOrderNumber;
		// this.quoteNumber = quoteNumber;
		this.customerName = customerName;
		this.poNumber = poNumber;
		this.orderStatus = orderStatus;
		this.orderType = orderType;
		this.orderProcessStatus = orderProcessStatus;
		this.orderCategory = orderCategory;
		this.orderSource = orderSource;
		this.pullSheetNumber = pullSheetNumber;
		this.orderDate = orderDate;
		this.taxEmempt = taxEmempt;
		this.taxEmemptNum = taxEmemptNum;
		this.as400TrackingInformations = as400TrackingInformations;
		this.as400BillShipInformations = as400BillShipInformations;
		this.as400Items = as400Items;
	}

	/**
	 * @return the as400BillShipInformations
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "as400Orders")
	public Set<As400BillShipInformation> getAs400BillShipInformations() {
		return as400BillShipInformations;
	}

	/**
	 * @param as400BillShipInformations
	 *            the as400BillShipInformations to set
	 */
	public void setAs400BillShipInformations(
			Set<As400BillShipInformation> as400BillShipInformations) {
		this.as400BillShipInformations = as400BillShipInformations;
	}

	/**
	 * @return the as400Items
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "as400Orders")
	public List<Orderitemsview> getAs400Items() {
		return as400Items;
	}

	/**
	 * @param as400Items
	 *            the as400Items to set
	 */
	public void setAs400Items(List<Orderitemsview> as400Items) {
		this.as400Items = as400Items;
	}

	/**
	 * @return the serialversionuid
	 */
	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "orderNumber", column = @Column(name = "ORDER_NUMBER", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "orderSuffix", column = @Column(name = "ORDER_SUFFIX", nullable = false, length = 2)) })
	public As400OrdersId getId() {
		return this.id;
	}

	public void setId(As400OrdersId id) {
		this.id = id;
	}

	// @ManyToOne(fetch = FetchType.LAZY)
	// @JoinColumn(name = "CUSTOMER_NUMBER")
	// public As400Customers getAs400Customers() {
	// return this.as400Customers;
	// }
	//
	// public void setAs400Customers(As400Customers as400Customers) {
	// this.as400Customers = as400Customers;
	// }

	@Column(name = "ORDER_ID", precision = 7, scale = 0)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@Column(name = "MASTER_ORDER_NUMBER", precision = 10, scale = 0)
	public Long getMasterOrderNumber() {
		return this.masterOrderNumber;
	}

	public void setMasterOrderNumber(Long masterOrderNumber) {
		this.masterOrderNumber = masterOrderNumber;
	}

	// @Column(name = "QUOTE_NUMBER", precision = 7, scale = 0)
	// public Integer getQuoteNumber() {
	// return this.quoteNumber;
	// }
	//
	// public void setQuoteNumber(Integer quoteNumber) {
	// this.quoteNumber = quoteNumber;
	// }

	@Column(name = "CUSTOMER_NAME", length = 30)
	public String getCustomerName() {
		return this.customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	@Column(name = "PO_NUMBER", precision = 20, scale = 0)
	public BigDecimal getPoNumber() {
		return this.poNumber;
	}

	public void setPoNumber(BigDecimal poNumber) {
		this.poNumber = poNumber;
	}

	@Column(name = "ORDER_STATUS", length = 40)
	public String getOrderStatus() {
		return this.orderStatus;
	}

	public void setOrderStatus(String orderStatus) {
		this.orderStatus = orderStatus;
	}

	@Column(name = "ORDER_TYPE", length = 10)
	public String getOrderType() {
		return this.orderType;
	}

	public void setOrderType(String orderType) {
		this.orderType = orderType;
	}

	@Column(name = "ORDER_PROCESS_STATUS", length = 40)
	public String getOrderProcessStatus() {
		return this.orderProcessStatus;
	}

	public void setOrderProcessStatus(String orderProcessStatus) {
		this.orderProcessStatus = orderProcessStatus;
	}

	@Column(name = "ORDER_CATEGORY", length = 2)
	public String getOrderCategory() {
		return this.orderCategory;
	}

	public void setOrderCategory(String orderCategory) {
		this.orderCategory = orderCategory;
	}

	@Column(name = "ORDER_SOURCE", length = 2)
	public String getOrderSource() {
		return this.orderSource;
	}

	public void setOrderSource(String orderSource) {
		this.orderSource = orderSource;
	}

	@Column(name = "PULL_SHEET_NUMBER", length = 6)
	public String getPullSheetNumber() {
		return this.pullSheetNumber;
	}

	public void setPullSheetNumber(String pullSheetNumber) {
		this.pullSheetNumber = pullSheetNumber;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ORDER_DATE")
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Column(name = "TAX_EMEMPT", length = 1)
	public String getTaxEmempt() {
		return this.taxEmempt;
	}

	public void setTaxEmempt(String taxEmempt) {
		this.taxEmempt = taxEmempt;
	}

	@Column(name = "TAX_EMEMPT_NUM", length = 20)
	public String getTaxEmemptNum() {
		return this.taxEmemptNum;
	}

	public void setTaxEmemptNum(String taxEmemptNum) {
		this.taxEmemptNum = taxEmemptNum;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "as400Orders")
	public Set<As400TrackingInformation> getAs400TrackingInformations() {
		return this.as400TrackingInformations;
	}

	public void setAs400TrackingInformations(
			Set<As400TrackingInformation> as400TrackingInformations) {
		this.as400TrackingInformations = as400TrackingInformations;
	}

}
